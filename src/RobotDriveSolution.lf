/**
 * Template for robot driving lab exercises.
 * This template just periodically switches between a
 * STOPPED and a DRIVING mode, updating the LCD display
 * on each change of mode.
 */
 target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    threading: false,
  }
  
  import Display from "lib/Display.lf"
  import Motors from "lib/Motors.lf"
  
  reactor Robot {
    input drive:bool       // Toggle mode.
    output notify:string   // Notify of mode change.
    output motor_left_power:float    //Specify the left motor power
    output motor_right_power:float    //Specify the right motor power
  
    reaction(startup) -> notify {=
      lf_set(notify, "INIT");
    =}
  
    initial mode STOPPED {
      reaction(drive) -> DRIVING, notify, motor_left_power, motor_right_power {=
        if (drive->value) {
          lf_set_mode(DRIVING);
          lf_set(notify, "DRIVING");
          lf_set(motor_left_power,0.1f);
          lf_set(motor_right_power,0.1f);
        }
      =}
    }
  
    mode DRIVING {
      reaction(drive) -> STOPPED, notify, motor_left_power, motor_right_power {=
        if (!drive->value) {
          lf_set_mode(STOPPED);
          lf_set(notify, "STOPPED");
          lf_set(motor_left_power,0.0f);
          lf_set(motor_right_power,0.0f);
        }
      =}
    }
  }
  
  main reactor {
    timer t(0, 2 sec)
    state drive:bool = false
    robot = new Robot()
    display = new Display()
    motor=new Motors()
    reaction(t) -> robot.drive {=
        lf_set(robot.drive, self->drive);
        // Toggle the drive state variable for next time.
        self->drive = !self->drive;
    =}
    robot.notify -> display.line0;
    robot.motor_left_power -> motor.left_power;
    robot.motor_right_power -> motor.right_power;
  }
  