/**
 * Display three dimensions of accelerometer measurements on the LCD display of the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * To run this program, first put the robot in BOOTSEL mode (hold button B while
 * resetting). Then the sequence of commands is something like this:
 *
 * ```
 *     $ cd ~/lf-pico
 *     $ lfc src/AccelerometerDisplay.lf
 *     ...
 *     $ picotool load -x bin/AccelerometerDisplay.elf
 * ```
 *
 * This compiles the program, loads it into flash memory on the robot, and begins
 * executing it.
 *
 * @author Edward A. Lee
 */
 target C {
    platform: "RP2040",
    threading: false,
}

import Accelerometer from "lib/IMU.lf"
import Display from "lib/Display.lf"
import Tilt from "lib/Tilt.lf"

main reactor {
    a = new Accelerometer()
    d = new Display()
    t= new Tilt()
    timer ti(0, 250 msec)
    reaction(ti) -> a.trigger {=
        lf_set(a.trigger, true);
    =}

    reaction(a.x, a.y, a.z) -> t.acce1,t.acce2,t.acce3 {=
    /// TODO: define max string size for line
    /// based on font you can have 4 or 8 lines 
    
    lf_set(t.acce1, a.x->value);
    lf_set(t.acce2, a.y->value);
    lf_set(t.acce3, a.z->value);
=}
    reaction(t.ang1, t.ang2, t.ang3) -> d.line0, d.line1, d.line2 {=
        /// TODO: define max string size for line
        /// based on font you can have 4 or 8 lines 
        static char buf0[17];
        static char buf1[17];
        static char buf2[17];


        snprintf(buf0, 17, "pitch:%2.4f", t.ang1->value+0.017);
        snprintf(buf1, 17, "roll:%2.4f", t.ang2->value+0.008);
        snprintf(buf2, 17, "null:%2.4f", 1/0.97*(t.ang3->value-0.055));
        
        lf_set(d.line0, buf0);
        lf_set(d.line1, buf1);
        lf_set(d.line2, buf2);
    =}
}